{"ast":null,"code":"var _jsxFileName = \"/Users/cdmstudent/Documents/GitHub/Web-Applications-HW2-main/client/src/Todos/CreateTodo.js\",\n  _s = $RefreshSig$();\n// This component is used for creating new to-do items.\nimport { useState, useContext, useEffect } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport { StateContext } from \"../context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoCreator() {\n  _s();\n  // Local state with initial empty values for title and description\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [taskDescription, setTaskDescription] = useState(\"\");\n\n  // Extract state and dispatcher from context\n  const {\n    state,\n    dispatch\n  } = useContext(StateContext);\n  const {\n    user\n  } = state;\n  const createdAt = new Date().toISOString();\n\n  // Resource hook for creating a new to-do item\n  const [todoList, addTodo] = useResource(({\n    title,\n    description,\n    author,\n    dateCreated,\n    isFinished,\n    finishDate\n  }) => ({\n    url: \"/todos\",\n    method: \"post\",\n    data: {\n      title,\n      description,\n      author,\n      dateCreated,\n      isFinished,\n      finishDate\n    }\n  }));\n\n  // Form submission handler\n  const onFormSubmit = event => {\n    event.preventDefault();\n    addTodo({\n      title: taskTitle,\n      description: taskDescription,\n      author: user,\n      dateCreated: createdAt,\n      isFinished: false,\n      finishDate: null\n    });\n  };\n\n  // Effect hook to clear the form upon successful to-do creation\n  useEffect(() => {\n    if (todoList !== null && todoList !== void 0 && todoList.data) {\n      console.log(\"New Task Added:\", todoList.data);\n      dispatch({\n        type: \"CREATE_TODO\",\n        ...todoList.data\n      });\n      setTaskTitle(\"\");\n      setTaskDescription(\"\");\n    }\n  }, [todoList === null || todoList === void 0 ? void 0 : todoList.data, dispatch]);\n\n  // Form for new to-do creation\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Creator: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"task-title\",\n        children: \"Task Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"task-title\",\n        id: \"task-title\",\n        value: taskTitle,\n        onChange: e => setTaskTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: taskDescription,\n      onChange: e => setTaskDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoCreator, \"2q6ygX9WVpYwnzHXJfsu3hvhEa8=\", false, function () {\n  return [useResource];\n});\n_c = TodoCreator;\nexport default TodoCreator;\nvar _c;\n$RefreshReg$(_c, \"TodoCreator\");","map":{"version":3,"names":["useState","useContext","useEffect","useResource","StateContext","jsxDEV","_jsxDEV","TodoCreator","_s","taskTitle","setTaskTitle","taskDescription","setTaskDescription","state","dispatch","user","createdAt","Date","toISOString","todoList","addTodo","title","description","author","dateCreated","isFinished","finishDate","url","method","data","onFormSubmit","event","preventDefault","console","log","type","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","id","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/cdmstudent/Documents/GitHub/Web-Applications-HW2-main/client/src/Todos/CreateTodo.js"],"sourcesContent":["// This component is used for creating new to-do items.\nimport { useState, useContext, useEffect } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport { StateContext } from \"../context\";\n\nfunction TodoCreator() {\n  // Local state with initial empty values for title and description\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [taskDescription, setTaskDescription] = useState(\"\");\n  \n  // Extract state and dispatcher from context\n  const { state, dispatch } = useContext(StateContext);\n  const { user } = state;\n  const createdAt = new Date().toISOString();\n\n  // Resource hook for creating a new to-do item\n  const [todoList, addTodo] = useResource(\n    ({ title, description, author, dateCreated, isFinished, finishDate }) => ({\n      url: \"/todos\",\n      method: \"post\",\n      data: {\n        title,\n        description,\n        author,\n        dateCreated,\n        isFinished,\n        finishDate,\n      },\n    })\n  );\n\n  // Form submission handler\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    addTodo({\n      title: taskTitle,\n      description: taskDescription,\n      author: user,\n      dateCreated: createdAt,\n      isFinished: false,\n      finishDate: null,\n    });\n  };\n\n  // Effect hook to clear the form upon successful to-do creation\n  useEffect(() => {\n    if (todoList?.data) {\n      console.log(\"New Task Added:\", todoList.data);\n      dispatch({ type: \"CREATE_TODO\", ...todoList.data });\n      setTaskTitle(\"\");\n      setTaskDescription(\"\");\n    }\n  }, [todoList?.data, dispatch]);\n\n  // Form for new to-do creation\n  return (\n    <form onSubmit={onFormSubmit}>\n      <div>\n        Creator: <strong>{user}</strong>\n      </div>\n      <div>\n        <label htmlFor=\"task-title\">Task Title:</label>\n        <input\n          type=\"text\"\n          name=\"task-title\"\n          id=\"task-title\"\n          value={taskTitle}\n          onChange={(e) => setTaskTitle(e.target.value)}\n        />\n      </div>\n      <textarea\n        value={taskDescription}\n        onChange={(e) => setTaskDescription(e.target.value)}\n      />\n      <input type=\"submit\" value=\"Add Task\" />\n    </form>\n  );\n}\n\nexport default TodoCreator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}