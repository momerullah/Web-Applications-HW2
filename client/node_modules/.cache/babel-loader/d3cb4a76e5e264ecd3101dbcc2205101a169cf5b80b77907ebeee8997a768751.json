{"ast":null,"code":"var _jsxFileName = \"/Users/cdmstudent/Documents/GitHub/Web-Applications-HW2-main/client/src/CreateTodo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useResource } from 'react-request-hook'; // Import useResource\nimport { StateContext } from './contexts'; // Assuming this is where you have your StateContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateTodo() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const {\n    state,\n    dispatch\n  } = useContext(StateContext); // Use the combined context\n\n  // Define the resource action for creating a new todo\n  const [todo, createTodo] = useResource(({\n    title,\n    description,\n    author\n  }) => ({\n    url: '/posts',\n    method: 'post',\n    data: {\n      title,\n      description,\n      author\n    }\n  }));\n  useEffect(() => {\n    if (todo && todo.data) {\n      // When the API call is successful and we have data, dispatch the action to add the todo\n      dispatch({\n        type: 'CREATE_TODO',\n        payload: {\n          ...todo.data,\n          // Add additional fields if necessary, for example:\n          // dateCreated: new Date().toISOString(),\n          complete: false\n          // dateCompleted: null // Only if you want to include this from the start\n        }\n      });\n    }\n    // Note that we are intentionally not including dispatch in the dependency array\n  }, [todo.data, todo.isLoading]); // Only re-run the effect if todo.data or todo.isLoading changes\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent default form submission\n    if (title.trim() && description.trim()) {\n      // Call the resource action to make the API request\n      createTodo({\n        title,\n        description,\n        author: state.user.user // Access the user from the combined state\n      });\n\n      // Reset the form fields\n      setTitle('');\n      setDescription('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"author\",\n      children: \"Author:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"author\",\n      id: \"author\",\n      value: state.user.user // Access the user from the combined state\n      ,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\",\n      children: \"Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      id: \"title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"description\",\n      children: \"Description:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"description\",\n      id: \"description\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateTodo, \"rFx0g4l3K0xDqmDAfb+O8HcPCUA=\", false, function () {\n  return [useResource];\n});\n_c = CreateTodo;\nvar _c;\n$RefreshReg$(_c, \"CreateTodo\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useResource","StateContext","jsxDEV","_jsxDEV","CreateTodo","_s","title","setTitle","description","setDescription","state","dispatch","todo","createTodo","author","url","method","data","type","payload","complete","isLoading","handleSubmit","e","preventDefault","trim","user","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","id","value","readOnly","onChange","target","_c","$RefreshReg$"],"sources":["/Users/cdmstudent/Documents/GitHub/Web-Applications-HW2-main/client/src/CreateTodo.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { useResource } from 'react-request-hook'; // Import useResource\nimport { StateContext } from './contexts'; // Assuming this is where you have your StateContext\n\nexport default function CreateTodo() {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const { state, dispatch } = useContext(StateContext); // Use the combined context\n\n    // Define the resource action for creating a new todo\n    const [todo, createTodo] = useResource(({ title, description, author }) => ({\n        url: '/posts',\n        method: 'post',\n        data: { title, description, author }\n    }));\n\n    useEffect(() => {\n        if (todo && todo.data) {\n            // When the API call is successful and we have data, dispatch the action to add the todo\n            dispatch({\n                type: 'CREATE_TODO',\n                payload: {\n                    ...todo.data,\n                    // Add additional fields if necessary, for example:\n                    // dateCreated: new Date().toISOString(),\n                    complete: false,\n                    // dateCompleted: null // Only if you want to include this from the start\n                }\n            });\n        }\n        // Note that we are intentionally not including dispatch in the dependency array\n    }, [todo.data, todo.isLoading]); // Only re-run the effect if todo.data or todo.isLoading changes\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); // Prevent default form submission\n        if (title.trim() && description.trim()) {\n            // Call the resource action to make the API request\n            createTodo({\n                title,\n                description,\n                author: state.user.user, // Access the user from the combined state\n            });\n\n            // Reset the form fields\n            setTitle('');\n            setDescription('');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"author\">Author:</label>\n            <input \n                type=\"text\"\n                name=\"author\"\n                id=\"author\"\n                value={state.user.user} // Access the user from the combined state\n                readOnly\n            />\n            <br />\n            <label htmlFor=\"title\">Title:</label>\n            <input \n                type=\"text\"\n                name=\"title\"\n                id=\"title\"\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n            />\n            <br />\n            <label htmlFor=\"description\">Description:</label>\n            <textarea \n                name=\"description\"\n                id=\"description\"\n                value={description}\n                onChange={e => setDescription(e.target.value)}\n            />\n            <br />\n            <input type=\"submit\" value=\"Add Todo\" />\n        </form>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}