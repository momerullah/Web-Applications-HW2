{"ast":null,"code":"var _jsxFileName = \"/Users/cdmstudent/Documents/GitHub/Web-Applications-HW2-main/client/src/Todos/CreateTodo.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect } from 'react';\nimport { useResource } from 'react-request-hook';\nimport { StateContext } from '../context';\nimport './CreateTodo.css';\n\n// Component for creating new todo items\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoCreator() {\n  _s();\n  // State for input fields\n  const [todoTitle, setTodoTitle] = useState('');\n  const [todoDescription, setTodoDescription] = useState('');\n\n  // Accessing the global state and dispatch function from context\n  const {\n    state,\n    dispatch\n  } = useContext(StateContext);\n  const {\n    user\n  } = state;\n\n  // Standard ISO format date for todo creation\n  const creationDate = new Date().toISOString();\n\n  // Resource hook for creating todo items\n  const [todoResource, createNewTodo] = useResource(todoDetails => ({\n    url: '/todos',\n    method: 'post',\n    data: todoDetails\n  }));\n\n  // Event handler for form submission\n  const handleCreateTodo = event => {\n    event.preventDefault();\n    createNewTodo({\n      title: todoTitle,\n      description: todoDescription,\n      author: user,\n      dateCreated: creationDate,\n      complete: false,\n      dateCompleted: null\n    });\n  };\n\n  // Effect to reset form and dispatch action when a new todo is created\n  useEffect(() => {\n    if (todoResource !== null && todoResource !== void 0 && todoResource.data) {\n      console.log('New Todo Created:', todoResource.data);\n      dispatch({\n        type: 'CREATE_TODO',\n        ...todoResource.data\n      });\n      setTodoTitle('');\n      setTodoDescription('');\n    }\n  }, [todoResource === null || todoResource === void 0 ? void 0 : todoResource.data, dispatch]);\n\n  // Form for new todo creation\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleCreateTodo,\n    className: \"create-todo-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"form-label\",\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"create-title\",\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"create-todo-input\",\n        name: \"create-title\",\n        id: \"create-title\",\n        value: todoTitle,\n        placeholder: \"Enter todo title\",\n        \"aria-label\": \"Todo title\",\n        onChange: e => setTodoTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"create-description\",\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"create-todo-textarea\",\n        id: \"create-description\",\n        value: todoDescription,\n        placeholder: \"Enter todo description\",\n        \"aria-label\": \"Todo description\",\n        onChange: e => setTodoDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      className: \"create-todo-submit\",\n      value: \"Create Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoCreator, \"TVnq5ilGxHs+HDXWDw+Fw/mKFBk=\", false, function () {\n  return [useResource];\n});\n_c = TodoCreator;\nvar _c;\n$RefreshReg$(_c, \"TodoCreator\");","map":{"version":3,"names":["useState","useContext","useEffect","useResource","StateContext","jsxDEV","_jsxDEV","TodoCreator","_s","todoTitle","setTodoTitle","todoDescription","setTodoDescription","state","dispatch","user","creationDate","Date","toISOString","todoResource","createNewTodo","todoDetails","url","method","data","handleCreateTodo","event","preventDefault","title","description","author","dateCreated","complete","dateCompleted","console","log","type","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","id","value","placeholder","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/cdmstudent/Documents/GitHub/Web-Applications-HW2-main/client/src/Todos/CreateTodo.js"],"sourcesContent":["import { useState, useContext, useEffect } from 'react';\nimport { useResource } from 'react-request-hook';\nimport { StateContext } from '../context';\nimport './CreateTodo.css';\n\n// Component for creating new todo items\nexport default function TodoCreator() {\n  // State for input fields\n  const [todoTitle, setTodoTitle] = useState('');\n  const [todoDescription, setTodoDescription] = useState('');\n\n  // Accessing the global state and dispatch function from context\n  const { state, dispatch } = useContext(StateContext);\n  const { user } = state;\n  \n  // Standard ISO format date for todo creation\n  const creationDate = new Date().toISOString();\n\n  // Resource hook for creating todo items\n  const [todoResource, createNewTodo] = useResource((todoDetails) => ({\n    url: '/todos',\n    method: 'post',\n    data: todoDetails,\n  }));\n\n  // Event handler for form submission\n  const handleCreateTodo = (event) => {\n    event.preventDefault();\n    createNewTodo({\n      title: todoTitle,\n      description: todoDescription,\n      author: user,\n      dateCreated: creationDate,\n      complete: false,\n      dateCompleted: null,\n    });\n  };\n\n  // Effect to reset form and dispatch action when a new todo is created\n  useEffect(() => {\n    if (todoResource?.data) {\n      console.log('New Todo Created:', todoResource.data);\n      dispatch({ type: 'CREATE_TODO', ...todoResource.data });\n      setTodoTitle('');\n      setTodoDescription('');\n    }\n  }, [todoResource?.data, dispatch]);\n\n  // Form for new todo creation\n\n  return (\n    <form onSubmit={handleCreateTodo} className=\"create-todo-form\">\n      <div className=\"form-group\">\n        <span className=\"form-label\">Author:</span>\n        <b>{user}</b>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"form-label\" htmlFor=\"create-title\">Title:</label>\n        <input\n          type=\"text\"\n          className=\"create-todo-input\"\n          name=\"create-title\"\n          id=\"create-title\"\n          value={todoTitle}\n          placeholder=\"Enter todo title\"\n          aria-label=\"Todo title\"\n          onChange={(e) => setTodoTitle(e.target.value)}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label className=\"form-label\" htmlFor=\"create-description\">Description:</label>\n        <textarea\n          className=\"create-todo-textarea\"\n          id=\"create-description\"\n          value={todoDescription}\n          placeholder=\"Enter todo description\"\n          aria-label=\"Todo description\"\n          onChange={(e) => setTodoDescription(e.target.value)}\n        />\n      </div>\n      <input\n        type=\"submit\"\n        className=\"create-todo-submit\"\n        value=\"Create Todo\"\n      />\n    </form>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}