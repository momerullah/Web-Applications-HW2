{"ast":null,"code":"var _jsxFileName = \"/Users/cdmstudent/Documents/GitHub/Web-Applications-HW2-main/client/src/User/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { StateContext } from \"../context\";\nimport axios from 'axios'; // Using axios for HTTP requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordRepeat, setPasswordRepeat] = useState(\"\");\n  const {\n    dispatch\n  } = useContext(StateContext);\n  useEffect(() => {\n    // This will be used to handle the registration response\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!/\\S+@\\S+\\.\\S+/.test(username)) {\n      alert(\"Invalid email format\");\n      return;\n    }\n    if (password !== passwordRepeat) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n    try {\n      // Making a POST request to the backend using axios\n      const response = await axios.post('/register', {\n        username,\n        password,\n        passwordConfirmation: passwordRepeat\n      });\n      if (response.status === 201) {\n        // Assuming the backend sends back a token and userId\n        dispatch({\n          type: \"REGISTER\",\n          username: response.data.username\n        });\n        // Save the token in local storage or in context for authenticated requests\n        localStorage.setItem('token', response.data.token);\n      }\n    } catch (error) {\n      // Handle errors here, for example, if user already exists or there's a server error\n      if (error.response) {\n        alert(error.response.data.error);\n      } else {\n        alert(\"An unexpected error occurred. Please try again.\");\n      }\n    }\n  };\n\n  // JSX for the registration form\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: username,\n                  onChange: e => setUsername(e.target.value),\n                  name: \"register-username\",\n                  id: \"register-username\",\n                  placeholder: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  value: password,\n                  onChange: e => setPassword(e.target.value),\n                  name: \"register-password\",\n                  id: \"register-password\",\n                  placeholder: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  value: passwordRepeat,\n                  onChange: e => setPasswordRepeat(e.target.value),\n                  name: \"register-password-repeat\",\n                  id: \"register-password-repeat\",\n                  placeholder: \"Repeat Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                className: \"btn btn-success\",\n                value: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"s10uTQTdlAbyrPa1AI94nO1vYxo=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useContext","useEffect","StateContext","axios","jsxDEV","_jsxDEV","Register","_s","username","setUsername","password","setPassword","passwordRepeat","setPasswordRepeat","dispatch","handleSubmit","e","preventDefault","test","alert","response","post","passwordConfirmation","status","type","data","localStorage","setItem","token","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","name","id","placeholder","_c","$RefreshReg$"],"sources":["/Users/cdmstudent/Documents/GitHub/Web-Applications-HW2-main/client/src/User/Register.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { StateContext } from \"../context\";\nimport axios from 'axios'; // Using axios for HTTP requests\n\nexport default function Register() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordRepeat, setPasswordRepeat] = useState(\"\");\n  const { dispatch } = useContext(StateContext);\n\n  useEffect(() => {\n    // This will be used to handle the registration response\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!/\\S+@\\S+\\.\\S+/.test(username)) {\n      alert(\"Invalid email format\");\n      return;\n    }\n    if (password !== passwordRepeat) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n    try {\n      // Making a POST request to the backend using axios\n      const response = await axios.post('/register', {\n        username,\n        password,\n        passwordConfirmation: passwordRepeat\n      });\n      if (response.status === 201) {\n        // Assuming the backend sends back a token and userId\n        dispatch({ type: \"REGISTER\", username: response.data.username });\n        // Save the token in local storage or in context for authenticated requests\n        localStorage.setItem('token', response.data.token);\n      }\n    } catch (error) {\n      // Handle errors here, for example, if user already exists or there's a server error\n      if (error.response) {\n        alert(error.response.data.error);\n      } else {\n        alert(\"An unexpected error occurred. Please try again.\");\n      }\n    }\n  };\n\n  // JSX for the registration form\n  return (\n    <div className=\"container mt-4\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-6\">\n          <div className=\"card\">\n            <div className=\"card-header\">Register</div>\n            <div className=\"card-body\">\n              <form onSubmit={handleSubmit}>\n                {/* Form fields for registration */}\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    name=\"register-username\"\n                    id=\"register-username\"\n                    placeholder=\"Email\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    name=\"register-password\"\n                    id=\"register-password\"\n                    placeholder=\"Password\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    value={passwordRepeat}\n                    onChange={(e) => setPasswordRepeat(e.target.value)}\n                    name=\"register-password-repeat\"\n                    id=\"register-password-repeat\"\n                    placeholder=\"Repeat Password\"\n                  />\n                </div>\n                <input type=\"submit\" className=\"btn btn-success\" value=\"Register\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}