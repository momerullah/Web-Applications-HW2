{"ast":null,"code":"var _jsxFileName = \"/Users/cdmstudent/Documents/GitHub/Web-Applications-HW2-main/client/src/User/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { StateContext } from \"../context\";\nimport { useResource } from \"react-request-hook\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:4000';\nexport default function Register() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordRepeat, setPasswordRepeat] = useState(\"\");\n  const {\n    dispatch\n  } = useContext(StateContext);\n\n  // Resource hook for registration\n  // Updated to match the backend API endpoint and data structure\n  const [user, register] = useResource(({\n    username,\n    password,\n    passwordRepeat\n  }) => ({\n    url: '/auth/register',\n    method: 'post',\n    data: {\n      username,\n      password,\n      passwordConfirmation: passwordRepeat\n    }\n  }));\n\n  // Effect hook for successful registration\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user.data) {\n      // Handle the response data as per your backend's response structure\n      dispatch({\n        type: 'REGISTER',\n        username: user.data.username\n      });\n    }\n  }, [user, dispatch]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!/\\S+@\\S+\\.\\S+/.test(username)) {\n      alert(\"Invalid email format\");\n      return;\n    }\n    if (password !== passwordRepeat) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n    // Call the register function with the username, password, and passwordRepeat\n    register({\n      username,\n      password,\n      passwordRepeat\n    });\n  };\n\n  // JSX for the registration form\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: username,\n                  onChange: e => setUsername(e.target.value),\n                  name: \"register-username\",\n                  id: \"register-username\",\n                  placeholder: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  value: password,\n                  onChange: e => setPassword(e.target.value),\n                  name: \"register-password\",\n                  id: \"register-password\",\n                  placeholder: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  value: passwordRepeat,\n                  onChange: e => setPasswordRepeat(e.target.value),\n                  name: \"register-password-repeat\",\n                  id: \"register-password-repeat\",\n                  placeholder: \"Repeat Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                className: \"btn btn-success\",\n                value: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"nEZCccFNx4NW7YNCtItICLknXE4=\", false, function () {\n  return [useResource];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useContext","useEffect","StateContext","useResource","axios","jsxDEV","_jsxDEV","defaults","baseURL","Register","_s","username","setUsername","password","setPassword","passwordRepeat","setPasswordRepeat","dispatch","user","register","url","method","data","passwordConfirmation","type","handleSubmit","e","preventDefault","test","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","name","id","placeholder","_c","$RefreshReg$"],"sources":["/Users/cdmstudent/Documents/GitHub/Web-Applications-HW2-main/client/src/User/Register.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { StateContext } from \"../context\";\nimport { useResource } from \"react-request-hook\";\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:4000';\n\nexport default function Register() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordRepeat, setPasswordRepeat] = useState(\"\");\n  const { dispatch } = useContext(StateContext);\n\n  // Resource hook for registration\n  // Updated to match the backend API endpoint and data structure\n  const [user, register] = useResource(({ username, password, passwordRepeat }) => ({\n    url: '/auth/register',\n    method: 'post',\n    data: { username, password, passwordConfirmation: passwordRepeat }\n  }));\n\n  // Effect hook for successful registration\n  useEffect(() => {\n    if (user?.data) {\n      // Handle the response data as per your backend's response structure\n      dispatch({ type: 'REGISTER', username: user.data.username });\n    }\n  }, [user, dispatch]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!/\\S+@\\S+\\.\\S+/.test(username)) {\n      alert(\"Invalid email format\");\n      return;\n    }\n    if (password !== passwordRepeat) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n    // Call the register function with the username, password, and passwordRepeat\n    register({ username, password, passwordRepeat });\n  };\n\n  // JSX for the registration form\n  return (\n    <div className=\"container mt-4\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-6\">\n          <div className=\"card\">\n            <div className=\"card-header\">Register</div>\n            <div className=\"card-body\">\n              <form onSubmit={handleSubmit}>\n                {/* Form fields for registration */}\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    name=\"register-username\"\n                    id=\"register-username\"\n                    placeholder=\"Email\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    name=\"register-password\"\n                    id=\"register-password\"\n                    placeholder=\"Password\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    value={passwordRepeat}\n                    onChange={(e) => setPasswordRepeat(e.target.value)}\n                    name=\"register-password-repeat\"\n                    id=\"register-password-repeat\"\n                    placeholder=\"Repeat Password\"\n                  />\n                </div>\n                <input type=\"submit\" className=\"btn btn-success\" value=\"Register\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}